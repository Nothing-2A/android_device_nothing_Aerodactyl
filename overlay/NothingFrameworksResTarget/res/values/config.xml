<?xml version="1.0" encoding="utf-8"?>
<!--
     SPDX-FileCopyrightText: The LineageOS Project
     SPDX-License-Identifier: Apache-2.0
-->
<resources>
    <!-- If this is true, long press on power button will be available from the non-interactive state -->
    <bool name="config_supportLongPressPowerWhenNonInteractive">true</bool>

    <!-- If supported, are dreams enabled? (by default) -->
    <bool name="config_dreamsEnabledByDefault">false</bool>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
    <integer name="config_shutdownBatteryTemperature">600</integer>

    <!-- Flag indicating whether we should enable the automatic brightness.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Control the default night mode to use when there is no other mode override set.
         One of the following values (see UiModeManager.java):
             0 - MODE_NIGHT_AUTO
             1 - MODE_NIGHT_NO
             2 - MODE_NIGHT_YES
    -->
    <integer name="config_defaultNightMode">2</integer>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Minimum color temperature, in Kelvin, supported by Night display. -->
    <integer name="config_nightDisplayColorTemperatureMin">3600</integer>

    <!-- Default color temperature, in Kelvin, to tint the screen when Night display is
         activated. -->
    <integer name="config_nightDisplayColorTemperatureDefault">3800</integer>

    <!-- Maximum color temperature, in Kelvin, supported by Night display. -->
    <integer name="config_nightDisplayColorTemperatureMax">4500</integer>

    <!-- Default strength, in percentage, of bright color reduction when activated. -->
    <integer name="config_reduceBrightColorsStrengthDefault">25</integer>

    <!-- Maximum strength, in percentage, supported by bright color reduction. -->
    <integer name="config_reduceBrightColorsStrengthMax">50</integer>

    <!-- Boolean indicating whether display white balance is supported. -->
    <bool name="config_displayWhiteBalanceAvailable">true</bool>

    <!-- Boolean indicating whether display white balance should be enabled by default. -->
    <bool name="config_displayWhiteBalanceEnabledDefault">true</bool>

    <!-- Minimum color temperature, in Kelvin, supported by display white balance. -->
    <integer name="config_displayWhiteBalanceColorTemperatureMin">5200</integer>

    <!-- Maximum color temperature, in Kelvin, supported by display white balance. -->
    <integer name="config_displayWhiteBalanceColorTemperatureMax">7000</integer>

    <!-- Duration, in milliseconds, of the display white balance animated transitions when increasing cct. -->
    <integer name="config_displayWhiteBalanceTransitionTimeIncrease">3000</integer>

    <!-- Duration, in milliseconds, of the display white balance animated transitions when decreasing cct. -->
    <integer name="config_displayWhiteBalanceTransitionTimeDecrease">3000</integer>

    <!-- Indicate available ColorDisplayManager.COLOR_MODE_xxx. -->
    <integer-array name="config_availableColorModes">
        <item>0</item>
        <item>1</item>
        <item>3</item>
        <item>256</item>
        <item>257</item>
        <item>258</item>
        <item>259</item>
        <item>260</item>
        <item>261</item>
        <item>262</item>
        <item>263</item>
        <item>264</item>
        <item>265</item>
    </integer-array>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- Array of output values for LCD backlight corresponding to the lux values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>8</item>
        <item>64</item>
        <item>98</item>
        <item>104</item>
        <item>110</item>
        <item>116</item>
        <item>122</item>
        <item>128</item>
        <item>134</item>
        <item>182</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
    </integer-array>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>128</item>
        <item>256</item>
        <item>384</item>
        <item>512</item>
        <item>640</item>
        <item>768</item>
        <item>896</item>
        <item>1024</item>
        <item>2048</item>
        <item>4096</item>
        <item>6144</item>
        <item>8192</item>
        <item>10240</item>
        <item>12288</item>
        <item>14336</item>
        <item>16384</item>
        <item>18432</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_ambientBrighteningThresholds, and the new darkening
         hysteresis constraint value is the n-th element of config_ambientDarkeningThresholds.

         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                       calculated index
         value < level[0]                0
         level[n] <= value < level[n+1]  n+1
         level[MAX] <= value             MAX+1 -->
    <integer-array name="config_ambientThresholdLevels">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
        <item>7</item>
        <item>8</item>
        <item>9</item>
        <item>10</item>
        <item>20</item>
        <item>30</item>
        <item>40</item>
        <item>50</item>
        <item>60</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientBrighteningThresholds">
        <item>10000</item>
        <item>5000</item>
        <item>4333</item>
        <item>3666</item>
        <item>3000</item>
        <item>2760</item>
        <item>2520</item>
        <item>2280</item>
        <item>2040</item>
        <item>1800</item>
        <item>800</item>
        <item>527</item>
        <item>500</item>
        <item>400</item>
        <item>248</item>
        <item>100</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientDarkeningThresholds">
        <item>853</item>
        <item>700</item>
        <item>683</item>
        <item>666</item>
        <item>650</item>
        <item>640</item>
        <item>630</item>
        <item>620</item>
        <item>610</item>
        <item>600</item>
        <item>500</item>
        <item>500</item>
        <item>440</item>
        <item>385</item>
        <item>311</item>
        <item>200</item>
    </integer-array>

    <!-- Minimum screen brightness setting allowed by power manager.
         -2 is invalid so setting will resort to int value specified above.
         Set this to 0.0 to allow screen to go to minimal brightness.
         The user is forbidden from setting the brightness below this level. -->
    <item name="config_screenBrightnessSettingMinimumFloat" format="float" type="dimen">0</item>

    <!-- Maximum screen brightness allowed by the power manager.
         -2 is invalid so setting will resort to int value specified above.
         Set this to 1.0 for maximum brightness range.
         The user is forbidden from setting the brightness above this level. -->
    <item name="config_screenBrightnessSettingMaximumFloat" format="float" type="dimen">1</item>

    <!-- Default screen brightness setting set.
         -2 is invalid so setting will resort to int value specified above.
         Must be in the range specified by minimum and maximum. -->
    <item name="config_screenBrightnessSettingDefaultFloat" format="float" type="dimen">0.4</item>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <item name="config_screenBrightnessDozeFloat" format="float" type="dimen">0.05</item>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">1000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>

    <!-- Timeout (in milliseconds) after which we remove the effects any user interactions might've
         had on the brightness mapping. This timeout doesn't start until we transition to a
         non-interactive display policy so that we don't reset while users are using their devices,
         but also so that we don't erroneously keep the short-term model if the device is dozing
         but the display is fully on. -->
    <integer name="config_autoBrightnessShortTermModelTimeout">120000</integer>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.

         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string name="config_dozeComponent" translatable="false">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- If true, the doze component is not started until after the screen has been
         turned off and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOffByDefault">true</bool>

    <!-- Doze: should the TYPE_PICK_UP_GESTURE sensor be used as a pulse signal. -->
    <bool name="config_dozePulsePickup">true</bool>

    <!-- Type of the tap sensor. Empty if tap is not supported. -->
    <string name="config_dozeTapSensorType" translatable="false">com.google.sensor.single_touch</string>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.

         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.

         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Whether the new Auto Selection Network UI should be shown -->
    <bool name="config_enableNewAutoSelectNetworkUI">true</bool>

    <!-- Is the device capable of hot swapping an UICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_volte_available">true</bool>

    <!-- Flag specifying whether VT is available on device -->
    <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether VT should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_vt_available">true</bool>

    <!-- Flag specifying whether WFC over IMS is available on device -->
    <bool name="config_device_wfc_ims_available">true</bool>

    <!-- Flag specifying whether WFC over IMS should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_wfc_ims_available">true</bool>

    <!-- Boolean indicating USSD over IMS is allowed.
     If it is not supported due to modem limitations, USSD send over the CS pipe instead.-->
    <bool name="config_allow_ussd_over_ims">true</bool>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

    <!-- If true, the display will be shifted around in ambient mode. -->
    <bool name="config_enableBurnInProtection">true</bool>

    <!-- MMS user agent string -->
    <string name="config_mms_user_agent" translatable="false">Android-Mms/0.1</string>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Limit for the number of face templates per user -->
    <integer name="config_faceMaxTemplatesPerUser">2</integer>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.

         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display. Optionally, you can append either `@left` or `@right` to the
         end of the path string, in order to change the path origin to either the top left,
         or top right of the display.

         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.

         If the display supports multiple resolutions, please define the path config based on the
         highest resolution so that it can be scaled correctly in each resolution.

         Example for a 10px x 10px square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
         Example for a 10dp x 10dp square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>

         @see https://www.w3.org/TR/SVG/paths.html#PathData
         -->
    <string translatable="false" name="config_mainBuiltInDisplayCutout">M540.2,33C524.1,33 511,46.1 511,62.3C511,78.4 524.1,91.5 540.2,91.5C556.4,91.5 569.5,78.4 569.5,62.3C569.5,46.1 556.4,33 540.2,33ZM540.2,83.8C528.3,83.8 518.8,74.1 518.8,62.3C518.8,50.5 528.4,40.9 540.2,40.9C552,40.9 561.7,50.5 561.7,62.3C561.7,74.1 552,83.8 540.2,83.8Z @left</string>

    <!-- Like config_mainBuiltInDisplayCutout, but this path is used to report the
         one single bounding rect per device edge to the app via
         {@link DisplayCutout#getBoundingRect}. Note that this path should try to match the visual
         appearance of the cutout as much as possible, and may be smaller than
         config_mainBuiltInDisplayCutout
         -->
    <string translatable="false" name="config_mainBuiltInDisplayCutoutRectApproximation">M454.0, 0.0 h 86.0 v 126 h -86.0 Z @left</string>

    <!-- Whether the display cutout region of the main built-in display should be forced to
         black in software (to avoid aliasing or emulate a cutout that is not physically existent).
         -->
    <bool name="config_fillMainBuiltInDisplayCutout">true</bool>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Server audio_policy_configuration.xml file must specify a rule for
           the "r_submix" remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->
    <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>

    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
    <integer name="config_num_physical_slots">2</integer>

    <!-- Whether to select voice/data/sms preference without user confirmation -->
    <bool name="config_voice_data_sms_auto_fallback">true</bool>

    <!-- Controls the navigation bar interaction mode:
         0: 3 button mode (back, home, overview buttons)
         1: 2 button mode (back, home buttons + swipe up for overview)
         2: gestures only for back, home and overview -->
    <integer name="config_navBarInteractionMode">2</integer>

    <!-- If face auth sends the user directly to home/last open app, or stays on keyguard -->
    <bool name="config_faceAuthDismissesKeyguard">false</bool>

    <!-- When each intermediate UDFPS enroll stage ends, as a fraction of total progress. -->
    <string-array name="config_udfps_enroll_stage_thresholds" translatable="false">
        <item>0.25</item>
        <item>0.5</item>
        <item>0.55</item>
    </string-array>

    <!-- Messages that should not be shown to the user during face authentication, on keyguard.
         This includes both lockscreen and bouncer. This should be used to hide messages that may be
         too chatty or messages that the user can't do much about. Entries are defined in
         android.hardware.biometrics.face@1.0 types.hal -->
    <integer-array name="config_face_acquire_keyguard_ignorelist" translatable="false" >
        <item>11</item>
    </integer-array>

    <!-- Default files to pin via Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>/system/framework/arm/boot-core-libart.oat</item>
        <item>/system/framework/arm/boot-conscrypt.oat</item>
        <item>/system/framework/arm/boot-core-libart.vdex</item>
        <item>/system/framework/arm/boot-ext.vdex</item>
        <item>/system/framework/arm/boot.vdex</item>
        <item>/system/framework/arm/boot-framework.vdex</item>
        <item>/vendor/lib64/libaaa_gma.so</item>
        <item>/vendor/lib64/libbwc.so</item>
        <item>/vendor/lib64/libcamalgo.InlineCompGyro.so</item>
        <item>/vendor/lib64/libfeature.hdr10.so</item>
        <item>/vendor/lib64/libmtkcam_camdeliver.so</item>
        <item>/vendor/lib64/libmtkcam_fdsan.so</item>
        <item>/vendor/lib64/libmtkcam_fdWarpConvert.so</item>
        <item>/vendor/lib64/libmtkcam_hal_aidl_device.so</item>
        <item>/vendor/lib64/libmtkcam_hal_aidl_provider.so</item>
        <item>/vendor/lib64/libwa_sat.so</item>
        <item>/vendor/lib64/libarcsoft_hdr_detection.so</item>
        <item>/vendor/lib64/egl/libMEOW_qt.so</item>
        <item>/vendor/lib64/egl/libMEOW_gift.so</item>
        <item>/vendor/lib64/egl/libGLES_meow.so</item>
        <item>/vendor/lib64/mt6886/libmorpho_MotionSensor.so</item>
        <item>/vendor/lib64/mt6886/libvega_face.so</item>
        <item>/vendor/lib64/mt6886/libmorpho_video_stabilizer.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_core_utils.so</item>
        <item>/vendor/lib64/mt6886/lib3a.af.assist.so</item>
        <item>/vendor/lib64/mt6886/libpda_usdriver.so</item>
        <item>/vendor/lib64/mt6886/libneuron_wrapper.so</item>
        <item>/vendor/lib64/mt6886/libMtkMediaController.so</item>
        <item>/vendor/lib64/mt6886/libmtkcm_ipc_dummy.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_ulog.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_tuning_utils.so</item>
        <item>/vendor/lib64/mt6886/lib3a.af.assist.utils.so</item>
        <item>/vendor/lib64/mt6886/lib3a.aishutter.so</item>
        <item>/vendor/lib64/mt6886/lib3a.awbsync.so</item>
        <item>/vendor/lib64/mt6886/lib3a.cculog.so</item>
        <item>/vendor/lib64/mt6886/lib3a.custom.ae.flow.so</item>
        <item>/vendor/lib64/mt6886/lib3a.custom.af.flow.so</item>
        <item>/vendor/lib64/mt6886/lib3a.custom.awb.flow.so</item>
        <item>/vendor/lib64/mt6886/lib3a.flash.so</item>
        <item>/vendor/lib64/mt6886/lib3a.flicker.so</item>
        <item>/vendor/lib64/mt6886/lib3a.stat.so</item>
        <item>/vendor/lib64/mt6886/libaaa_ltmx.so</item>
        <item>/vendor/lib64/mt6886/libaaa_toneutil.so</item>
        <item>/vendor/lib64/mt6886/libaiseg_cache.so</item>
        <item>/vendor/lib64/mt6886/libaiseg_p1ggm.so</item>
        <item>/vendor/lib64/mt6886/libaiseg_sun.so</item>
        <item>/vendor/lib64/mt6886/libalgo.aosp.log.so</item>
        <item>/vendor/lib64/mt6886/libcam.afmgr.so</item>
        <item>/vendor/lib64/mt6886/libcam.chdr.so</item>
        <item>/vendor/lib64/mt6886/libcam.feature_utils.so</item>
        <item>/vendor/lib64/mt6886/libcam.fw_me_tcy.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.afassitmgr.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.ctrl.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.ircutdrv.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.lensdrv.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.log.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.lscMgrApi.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.oisdrv.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.ozoomdrv.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.pdstatmgr.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.policy.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.tofdrv.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.utils.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.ae.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.awb_v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.cac.mgr.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.dng.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.flash.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.flicker.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.ir.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.lsctbl.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.nvram.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.strobe.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.stt_v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.hal3a.v3.tone.mgr.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.halisp.plugin.so</item>
        <item>/vendor/lib64/mt6886/libcam.halisp.SwTopCtrlMgr.so</item>
        <item>/vendor/lib64/mt6886/libcam.halisp.TopCtrlMgr.so</item>
        <item>/vendor/lib64/mt6886/libcam.halisp.TuningDataProvider.so</item>
        <item>/vendor/lib64/mt6886/libcam.halisp.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.isptuning.v4l2.so</item>
        <item>/vendor/lib64/mt6886/libcam.peripheralcontroller.so</item>
        <item>/vendor/lib64/mt6886/libcam.tuningcachemgr.so</item>
        <item>/vendor/lib64/mt6886/libcam.vhdr.so</item>
        <item>/vendor/lib64/mt6886/libcam_ipc_halisp_client.so</item>
        <item>/vendor/lib64/mt6886/libcamalgo.fus.so</item>
        <item>/vendor/lib64/mt6886/libcamalgo.lsc.so</item>
        <item>/vendor/lib64/mt6886/libcamalgo.mcnr.so</item>
        <item>/vendor/lib64/mt6886/libcamera.custom.af_assist_buf_mgr.so</item>
        <item>/vendor/lib64/mt6886/libcamera.custom.af_assist_mgr.so</item>
        <item>/vendor/lib64/mt6886/libcamera.custom.af_assist_pdp.so</item>
        <item>/vendor/lib64/mt6886/libcamera.customflk.so</item>
        <item>/vendor/lib64/mt6886/libcameracustom.camera.isp.so</item>
        <item>/vendor/lib64/mt6886/libcameracustom.camera_calibration.core.so</item>
        <item>/vendor/lib64/mt6886/libcameracustom.cfg_setting.core.so</item>
        <item>/vendor/lib64/mt6886/libcameracustom.eis.so</item>
        <item>/vendor/lib64/mt6886/libcameracustom.flashlight.so</item>
        <item>/vendor/lib64/mt6886/libcameracustom.lens.so</item>
        <item>/vendor/lib64/mt6886/libcameracustom.so</item>
        <item>/vendor/lib64/mt6886/libccd.so</item>
        <item>/vendor/lib64/mt6886/libfeature.aiseg.so</item>
        <item>/vendor/lib64/mt6886/libfeature.face.so</item>
        <item>/vendor/lib64/mt6886/libfeature.fwmvp.so</item>
        <item>/vendor/lib64/mt6886/libfeature.mcnr.so</item>
        <item>/vendor/lib64/mt6886/libfeature.vainr.hal.so</item>
        <item>/vendor/lib64/mt6886/libfeature.vainr.kernel.so</item>
        <item>/vendor/lib64/mt6886/libfeature.vsdof.3a_info_provider.so</item>
        <item>/vendor/lib64/mt6886/libfeature_vrp.so</item>
        <item>/vendor/lib64/mt6886/libfeatureiodrv_mem.so</item>
        <item>/vendor/lib64/mt6886/libfeaturepolicy_dbhandler.so</item>
        <item>/vendor/lib64/mt6886/libimgstream-custom.so</item>
        <item>/vendor/lib64/mt6886/libimgstream-drv.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_adl.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_cmt.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_custom.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_daemon.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_dip.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_gce.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_main.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_me.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_pqdip.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_system.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_taskhandler.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_tdrhal.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_tile.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_traw.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_utils.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_v4l2.so</item>
        <item>/vendor/lib64/mt6886/libimgsys_wpe.so</item>
        <item>/vendor/lib64/mt6886/libmgr3a.adapt.so</item>
        <item>/vendor/lib64/mt6886/libmtk_drvb.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam.atmseventmgr.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam.debugwrapper.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam.featurepipe.capture.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam.logicalcaminfoprovider.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_buffer_flush.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_camcontroller.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_camcoordinator.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_cputrack.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_debugutils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_devicemgr.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_diputils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_dma_map.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_externalisploader.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_faceResultHandler.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_grallocutils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_android_app_cbadaptor.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_android_common.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_android_device.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_android_provider.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_aov.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_core_app.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_core_app_cbadaptor.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_core_device.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_core_devicesessionpolicy.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_core_utils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal_custom_provider.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hal3a_provider.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hwutils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hwutils_android.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_hwutils_poweronoffcontroller.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_imgbuf_v2.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_ipc_core.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_mapping_mgr.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_modulefactory_utils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_modulehelper.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_packutils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_perfctrl.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pip.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pipeline.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pipeline_fbm.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pipelinemodel_capture.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pipelinemodel_utils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pipelinepolicy.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pipelinepolicy_factory.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_pipemgr.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_postprocprovider.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_request_requlator.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_stdutils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_streamutils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_synchelper.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_sysutils.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_thirdparty.core.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_thirdparty.customzone.so</item>
        <item>/vendor/lib64/mt6886/libmtkcam_thirdparty.so</item>
        <item>/vendor/lib64/mt6886/libcam_nothing.so</item>
        <item>/vendor/lib64/vendor.mediatek.hardware.pq@2.3.so</item>
        <item>/vendor/lib64/vendor.mediatek.hardware.mtkpower@1.0.so</item>
    </string-array>

    <!-- The default refresh rate for a given device. Change this value to set a higher default
         refresh rate. If the hardware composer on the device supports display modes with a higher
         refresh rate than the default value specified here, the framework may use those higher
         refresh rate modes if an app chooses one by setting preferredDisplayModeId or calling
         setFrameRate().
         If a non-zero value is set for config_defaultPeakRefreshRate, then
         config_defaultRefreshRate may be set to 0, in which case the value set for
         config_defaultPeakRefreshRate will act as the default frame rate. -->
    <integer name="config_defaultRefreshRate">121</integer>

    <!-- The default peak refresh rate for a given device. Change this value if you want to prevent
         the framework from using higher refresh rates, even if display modes with higher refresh
         rates are available from hardware composer. Only has an effect if the value is
         non-zero. -->
    <integer name="config_defaultPeakRefreshRate">121</integer>

    <!-- Colon separated list of package names that should be granted Notification Listener access -->
    <string name="config_defaultListenerAccessPackages" translatable="false">co.aospa.glyph</string>

    <!-- Type of the udfps long press sensor. Empty if long press is not supported. -->
    <string name="config_dozeUdfpsLongPressSensorType" translatable="false">org.lineageos.sensor.udfps</string>
</resources>
